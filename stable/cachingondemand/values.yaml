# Default values for cachingondemand.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# ExternalIps to be used for service exposition
externalIp:
  enabled: true
  ips:
  - 192.168.0.123

# Enable this to activate gsi authentication
gsi:
  enabled: false
  
  # authorized VOs
  vo:
  
  # generate voms files configMap
  vomses: []
  # - filename: ""
  #   content: |
  #     mymultine
  #     file
  
  # gsi certificates
  cacheCert: {}
  #  cert: ""
  #  key: ""

  # use proxy for remote auth
  proxy: false


# Cache server configuration
cache:
  image: cloudpg/cachingondemand
  tag: latest
  pullPolicy: IfNotPresent
  replicas: 1

  # Cache specific configuration
  redirHost: xcache-redir-service.default.svc.cluster.local
  replicas: 1
  cachePath: /data/xrd
  blockSize: 512k
  memGb: 2
  highWm: 0.95
  lowWm: 0.80
  nPrefetch: 0
  originHost: xrootd-cms.infn.it
  originXrdPort: 1094
  streams: 256
  logLevel: info

  http:
    enabled: false
    httpPort: 8080

  persistence:
    enabled: true
    cacheHostPath: /data/xrd
    volumeClaim: {}
    #  enabled: false
    #  type: ""
    #  name: ""
    #  size: ""

  # TO BE IMPLEMENTED YET
  configMap:
    enabled: false
    name: ""
    mountPoint: ""
  nodeSelector: {}
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi

# Cache redirector configuration
redirector:
  enabled: true
  image: cloudpg/cachingondemand
  tag: latest
  pullPolicy: IfNotPresent
  replicas: 1

  # K8s service configuration
  service:
    type: ClusterIP
    xrootd:
      port: 31294
      targetPort: 
      nodePort:
    cms:
      port: 31213
      targetPort: 
      nodePort:

  # TO BE IMPLEMENTED YET
  configMap:
    enabled: false
    name: ""
    mountPoint: ""
  nodeSelector: {}
  resources: {}

# XROOTD proxy configuration
proxy:
  enabled: true
  image: cloudpg/cachingondemand
  tag: latest
  pullPolicy: IfNotPresent
  replicas: 1

  service:
    type: ClusterIP
    xrootd:
      port: 31394
      targetPort: 
      nodePort:

  # TO BE IMPLEMENTED YET
  configMap:
    enabled: false
    name: ""
    mountPoint: ""
  nodeSelector: {}
  resources: {}

fakeOrigin:
  enabled: false
  image: cloudpg/cachingondemand
  tag: latest
  replicas: 1
